// are A and B causally connected?

var infer = function(fn) {return Infer({method: 'enumerate'}, fn); };

// if A and B are causally connected,
// then B is true whenever A is.
// otherwise, B is false.
var latentsModel = function() {
	return {
		model: uniformDraw(["A->B", "A,B"]),
		A: flip(),
		Bbackground: flip(0.9)
	};
};

var statesModel = function(latents) {
	var A = latents.A;
	var B = (latents.model=="A->B") ? (A || latents.Bbackground ? true : false) : (latents.Bbackground ? true : false);
	var connected = latents.model=="A->B";
	return { A: A, B: B, connected: connected };
};

var counterfactualizeLatents = function(model, actual) {
	var s = 0.53; //stickiness
	var totallyDifferent = model();

	return mapObject(function(key, value) {
		return flip(s) ? actual[key] : totallyDifferent[key];
	}, actual);
};

var counterfactually = function(args) {
	var ifVariable = args.ifVariable;
	var hadBeen = args.hadBeen;
	var thenVariable = args.thenVariable;
	var wouldhaveBeen = args.wouldhaveBeen;
	return infer(function() {

		var actulLatents = args.givenActualLatents ? args.givenActualLatents : latentsModel();
		var actualStates = statesModel(actulLatents);
		if (args.givenActualStates) {
			condition(_.isEqual(args.givenActualStates, actualStates));
		}

		var cfLatents = counterfactualizeLatents(latentsModel, actulLatents);
		var cfStates = statesModel(cfLatents);
		condition(cfStates[ifVariable]==hadBeen);
		return cfStates[thenVariable]==wouldhaveBeen
	});
};

var latents = latentsModel();
var states = statesModel(latents);
display(states);

display("If not A then not B (when connected)");
display(counterfactually({
	ifVariable: "A",
	hadBeen: false,
	thenVariable: "B",
	wouldhaveBeen: false,
	givenActualStates: {connected: true, A: true, B: true}
}));
display("If not B then not A (when connected)")
display(counterfactually({
	ifVariable: "B",
	hadBeen: false,
	thenVariable: "A",
	wouldhaveBeen: false,
	givenActualStates: {connected: true, A: true, B: true}
}));
display("If not A then not B (when not connected)");
display(counterfactually({
	ifVariable: "A",
	hadBeen: false,
	thenVariable: "B",
	wouldhaveBeen: false,
	givenActualStates: {connected: false, A: true, B: true}
}));
display("If not B then not A (when not connected)")
display(counterfactually({
	ifVariable: "B",
	hadBeen: false,
	thenVariable: "A",
	wouldhaveBeen: false,
	givenActualStates: {connected: false, A: true, B: true}
}));

"finished";