var infer = function(fn) {return Infer({method: 'enumerate'}, fn)};
var discreteUniform = function() {
	return uniformDraw(utilities.range(0, 1, 0.1));
};
var probTrue = function(dist) { return Math.exp(dist.score(true)); };
var marginal = function(dist, value) { return infer(function() {sample(dist).value;}) };
var sampleWithUniformRV = function(dist, uniformRV) {
	var support = dist.support();
	var check = function(elems, probabilityMassSoFar) {
		var elemToCheck = first(elems);
		if (elems.length==1) {return elemToCheck;}
		var probabilityMass = probabilityMassSoFar + probability(dist, elemToCheck);
		if (uniformRV < probabilityMass) {
			return elemToCheck;
		} else {
			var elemsRemaining = rest(elems);
			return check(elemsRemaining, probabilityMass);
		}
	};
	check(support, 0);
};
var probability = function(dist, value) {return Math.exp(dist.score(value));};
